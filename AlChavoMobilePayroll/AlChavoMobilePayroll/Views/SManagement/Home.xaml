<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms" xmlns:chart="clr-namespace:Syncfusion.SfChart.XForms;assembly=Syncfusion.SfChart.XForms" xmlns:xct="http://xamarin.com/schemas/2020/toolkit" xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml" xmlns:behaviorsPack="clr-namespace:Xamarin.Forms.BehaviorsPack;assembly=Xamarin.Forms.BehaviorsPack" xmlns:telerikInput="clr-namespace:Telerik.XamarinForms.Input;assembly=Telerik.XamarinForms.Input" x:Class="AlChavoMobilePayroll.Views.SManagement.Home" NavigationPage.HasNavigationBar="False" x:Name="HomePage" xmlns:smanagement="clr-namespace:AlChavoMobilePayroll.ViewModels.SManagement" x:DataType="smanagement:HomeViewModel">

    <ContentPage.Resources>
        <ResourceDictionary>
            <Style TargetType="ImageButton" x:Key="NavBarIcon">
                <Setter Property="HorizontalOptions" Value="End"></Setter>
                <Setter Property="VerticalOptions" Value="Start"></Setter>
                <Setter Property="BackgroundColor" Value="Transparent"></Setter>
                <Setter Property="HeightRequest" Value="30"></Setter>
                <Setter Property="Margin" Value="3,0,3,0"></Setter>
            </Style>
            <Style TargetType="Frame" x:Key="MainFrame">
                <Setter Property="HorizontalOptions" Value="FillAndExpand" />
                <Setter Property="VerticalOptions" Value="Start" />
                <Setter Property="Padding" Value="10,5" />
                <Setter Property="Margin" Value="0,4,0,0" />
                <Setter Property="CornerRadius" Value="10" />
                <Setter Property="BorderColor" Value="{StaticResource SystemGray5}" />
                <Setter Property="HasShadow" Value="False" />
                <Setter Property="BackgroundColor" Value="{AppThemeBinding Dark={StaticResource FrameBackgroundColorDark  }, Light={StaticResource FrameBackgroundColorLight }}"></Setter>
<!--
                -->
                <Setter Property="xct:ShadowEffect.Color" Value="{AppThemeBinding Dark={StaticResource AlChavoDarkBlue     }, Light={StaticResource ShadowColor   }}" />
                <Setter Property="xct:ShadowEffect.OffsetY" Value="2" />
                <Setter Property="xct:ShadowEffect.Radius" Value="3" />
            </Style>
            <Style TargetType="Label" x:Key="MainFrameTitle">
                <Setter Property="FontSize" Value="16" />
                <Setter Property="FontAttributes" Value="Bold" />
                <Setter Property="TextColor" Value="Black" />
                <Setter Property="HorizontalTextAlignment" Value="Start" />
                <Setter Property="VerticalOptions" Value="FillAndExpand" />
            </Style>
            <Style TargetType="Label" x:Key="MainFrameTitle2">
                <Setter Property="HorizontalTextAlignment" Value="Center" />
                <Setter Property="FontSize" Value="16" />
                <Setter Property="Margin" Value="0,0,0,0" />
                <Setter Property="TextColor" Value="{StaticResource SystemGray }" />

            </Style>
            <Style TargetType="Label" x:Key="MainFrameDetail1">
                <Setter Property="FontSize" Value="18" />
                <Setter Property="VerticalOptions" Value="CenterAndExpand" />
            </Style>
            <Style TargetType="Frame" x:Key="INOUTStatusFrame">
                <Setter Property="CornerRadius" Value="13"></Setter>
                <Setter Property="VerticalOptions" Value="Center"></Setter>
                <Setter Property="Padding" Value="5,1"></Setter>
                <Setter Property="BackgroundColor" Value="{StaticResource AlChavoBlueThree }"></Setter>

            </Style>
            <Style TargetType="Label" x:Key="INOUTStatus">
                <Setter Property="FontSize" Value="17"></Setter>
                <Setter Property="Margin" Value="6,2,6,2"></Setter>
                <Setter Property="FontAttributes" Value="Bold"></Setter>
                <Setter Property="TextColor" Value="White"></Setter>

            </Style>
            <Style TargetType="Label" x:Key="compensationLabels">
                <Setter Property="FontSize" Value="16"></Setter>
                <Setter Property="Padding"  Value="0"></Setter>
                <Setter Property="Margin" Value="0"></Setter>
                <Setter Property="FontAttributes" Value="None"></Setter>
                <Setter Property="HorizontalTextAlignment" Value="Start"></Setter>
                <Setter Property="VerticalOptions" Value="CenterAndExpand"></Setter>
            </Style>

           
            <ControlTemplate x:Key="headerTemplate">
                <Label Text="Select Company:" TextColor="{StaticResource AlChavoBlue }" FontSize="18" FontAttributes="Bold" VerticalTextAlignment="Center" HorizontalTextAlignment="Center" BackgroundColor="{StaticResource GrayControl }" />
            </ControlTemplate>
        </ResourceDictionary>
    </ContentPage.Resources>

    <Shell.TitleView>
        <Grid Style="{StaticResource TitleViewGrid }" ColumnDefinitions="*,Auto,Auto" RowDefinitions="Auto">
            <telerikInput:RadComboBox Grid.Column="0" Grid.Row="0" x:Name="rcbCompanies" BorderColor="Transparent" FontSize="18" ItemsSource="{Binding companyList}" DisplayMemberPath="FullName" SearchMode="{Binding SearchMode}" SearchTextPath="FullName" IsEditable="True" SelectedItem="{Binding selectedCompany}" SelectionMode="Single" WidthRequest="300" CornerRadius="0" HorizontalOptions="StartAndExpand">

                <telerikInput:RadComboBox.Behaviors>
                    <xct:EventToCommandBehavior EventName="SelectionChanged" Command="{Binding SelectedCompanyChangedCommand }" CommandParameter="{Reference rcbCompanies}" />
                </telerikInput:RadComboBox.Behaviors>

                <telerikInput:RadComboBox.HeaderTemplate>
                    <DataTemplate>
                        <Frame BackgroundColor="{StaticResource AlChavoBlue}" VerticalOptions="CenterAndExpand" HorizontalOptions="FillAndExpand">
                            <Label Text="Select Company from List" HorizontalTextAlignment="Center" VerticalTextAlignment="Center" FontSize="15" FontAttributes="Bold" TextColor="{StaticResource WindowBackgroundColorLight   }" />
                        </Frame>
                    </DataTemplate>
                </telerikInput:RadComboBox.HeaderTemplate>

            </telerikInput:RadComboBox>
            <ImageButton Grid.Column="1" Grid.Row="0" HorizontalOptions="End" Style="{StaticResource NavBarIcon}" x:Name="imgbtnUser" Source="account3.png" Command="{Binding GoToUserCommand}" />
            <ImageButton Grid.Column="2" Grid.Row="0" HorizontalOptions="End" Style="{StaticResource NavBarIcon}" x:Name="imgBtnLogo" Source="CompanyIcon.png" />
        </Grid>
    </Shell.TitleView>

    <ContentPage.Content>
        <ScrollView Margin="0" Padding="0">
            <StackLayout Style="{StaticResource StackContent }"   Orientation="Vertical" Padding="20,0" >
                <StackLayout Padding="0,5,0,0" HorizontalOptions="CenterAndExpand" VerticalOptions="Start">
                    <Label FontSize="16" HorizontalTextAlignment="Center" VerticalOptions="CenterAndExpand" Text="{Binding userModel.Name}" FontAttributes="Bold" TextColor="{StaticResource AlChavoBlue}" />
                    <Label FontSize="14" HorizontalTextAlignment="Center" VerticalOptions="CenterAndExpand" Text="{Binding userModel.Email}" />
                </StackLayout>

                <Frame Style="{StaticResource MainFrame }">
                    <StackLayout Orientation="Vertical" >
                        <Label Style="{StaticResource MainFrameTitle}" Text="Clock" />
                        <BoxView Style="{StaticResource BoxViewSeparator }" />

                        <Label Style="{StaticResource MainFrameTitle2 }" Text="Last Punch" />
                        <StackLayout Orientation="Horizontal" HorizontalOptions="Center">
                            <Label   VerticalOptions="Center" FontSize="20" Text="{Binding getLastPunchResponse.PunchHour}" HorizontalOptions="Start" HorizontalTextAlignment="Center" VerticalTextAlignment="Start" TextColor="Black" FontAttributes="Bold" />
                            <Frame  Style="{StaticResource INOUTStatusFrame }" VerticalOptions="Center" HorizontalOptions="End">
                                <StackLayout>
                                    <Label Style="{StaticResource INOUTStatus }" IsVisible="{Binding IsPunchOut }" Text="OUT" />
                                    <Label Style="{StaticResource INOUTStatus }" IsVisible="{Binding IsPunchIn }" Text="IN" />
                                </StackLayout>
                            </Frame>
                        </StackLayout>
                        <Label FontSize="20" HorizontalTextAlignment="Center" VerticalOptions="CenterAndExpand" Text="{Binding getLastPunchResponse.PunchDate, StringFormat='{0:MMMM dd, yyyy}'}" />

                        <Button Style="{StaticResource BlueBtn }" HorizontalOptions="FillAndExpand" HeightRequest="44" CornerRadius="17" Text="Punch" Command="{Binding GoToPunch}" Margin="40,4,40,10" Padding="0" FontSize="18" />
                    </StackLayout>
                </Frame>

                <Frame Style="{StaticResource MainFrame }">
                    <StackLayout>
                        <Label Style="{StaticResource MainFrameTitle}" Text="Pay" />
                        <BoxView Style="{StaticResource BoxViewSeparator }" />

                        <Label Style="{StaticResource MainFrameTitle2 }" Text="Compensation"  Margin="0,-5" Padding="0" />
                        <chart:SfChart Margin="0" HeightRequest="200" ChartPadding="-5">
                            <chart:SfChart.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding TapChartCommand}"/>
                            </chart:SfChart.GestureRecognizers>
                            <chart:SfChart.Series>
                                <chart:DoughnutSeries ItemsSource="{Binding checkRegisterLastResponse.CheckPieData}" XBindingPath="TitlePie" YBindingPath="ValuePie" LegendIcon="Circle" EnableAnimation="true" StrokeWidth="1" StrokeColor="White" ExplodeOnTouch="False" EnableDataPointSelection="False">
                                    <chart:DoughnutSeries.DataMarker>
                                        <chart:ChartDataMarker ShowLabel="True">
                                            <chart:ChartDataMarker.LabelStyle>
                                                <chart:DataMarkerLabelStyle LabelFormat="##'%'" />
                                            </chart:ChartDataMarker.LabelStyle>
                                        </chart:ChartDataMarker>
                                    </chart:DoughnutSeries.DataMarker>
                                    <chart:DoughnutSeries.ColorModel>
                                        <chart:ChartColorModel Palette="Custom" CustomBrushes="{StaticResource Colors}" />
                                    </chart:DoughnutSeries.ColorModel>
                                    <chart:DoughnutSeries.CenterView>
                                        <StackLayout x:Name="stack" Orientation="Vertical" HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand">
                                            <Label Text="Hours" IsVisible="{Binding Path=BindingContext.IsVisibleHoursTitle,Source={x:Reference HomePage}}" FontSize="14" FontFamily="Helvetica" HorizontalTextAlignment="Center" TextColor="{StaticResource SystemGray }" />
                                            <Label Text="{Binding Path=BindingContext.checkRegisterLastResponse.CheckHours,Source={x:Reference HomePage}}" TextColor="{StaticResource SystemGray }" FontAttributes="Bold" FontSize="16" FontFamily="Helvetica" HorizontalTextAlignment="Center" />
                                        </StackLayout>
                                    </chart:DoughnutSeries.CenterView>
                                </chart:DoughnutSeries>
                            </chart:SfChart.Series>

                        </chart:SfChart>

                        <Label FontSize="16" FontAttributes="Bold" HorizontalTextAlignment="Start" VerticalOptions="FillAndExpand" Text="{Binding checkRegisterLastResponse.CheckDate, StringFormat='{0:MMMM dd, yyyy}'}" />
                        <BoxView Style="{StaticResource BoxViewSeparator }" />

                        <Grid ColumnDefinitions="30*,40*,30*" RowDefinitions="30">
                            <Label Grid.Column="0" Grid.Row="0" Style="{StaticResource compensationLabels}" HorizontalOptions="Start" Text="Net Pay" />
                            <Label Grid.Column="1" Grid.Row="0" Style="{StaticResource compensationLabels}" HorizontalOptions="CenterAndExpand" Text="$XXX.XX" IsVisible="{Binding isVisibleHiddenNet}" />
                            <Label Grid.Column="1" Grid.Row="0" Style="{StaticResource compensationLabels}" HorizontalOptions="CenterAndExpand" Text="{Binding checkRegisterLastResponse.Net, StringFormat='{0:C}'}" IsVisible="{Binding isVisibleNet}" />
                            <ImageButton Grid.Column="2" Grid.Row="0" HorizontalOptions="End" BackgroundColor="Transparent" Padding="0" Source="eye_slash_icon.png" IsVisible="{Binding isVisibleHiddenNet}" x:Name="HiddenIconNet">
                                <ImageButton.Behaviors>
                                    <behaviorsPack:EventToCommandBehavior Command="{Binding NetVisibilityCommand}" CommandParameter="{Reference HiddenIconNet}" EventName="Clicked"></behaviorsPack:EventToCommandBehavior>
                                </ImageButton.Behaviors>
                            </ImageButton>
                            <ImageButton Grid.Column="2" Grid.Row="0" HorizontalOptions="End" BackgroundColor="Transparent" Padding="0" Source="eye_vision_view_icon.png" IsVisible="{Binding isVisibleNet}" x:Name="ShowIconNet">
                                <ImageButton.Behaviors>
                                    <behaviorsPack:EventToCommandBehavior Command="{Binding NetVisibilityCommand}" CommandParameter="{Reference ShowIconNet}" EventName="Clicked"></behaviorsPack:EventToCommandBehavior>
                                </ImageButton.Behaviors>
                            </ImageButton>
                        </Grid>

                        <BoxView Style="{StaticResource BoxViewSeparator }" />

                        <Grid ColumnDefinitions="30*,40*,30*" RowDefinitions="30">
                            <Label Grid.Column="0" Grid.Row="0" Style="{StaticResource compensationLabels}" HorizontalOptions="Start" Text="Gross Pay" />
                            <Label Grid.Column="1" Grid.Row="0" Style="{StaticResource compensationLabels}" HorizontalOptions="CenterAndExpand" Text="$XXX.XX" IsVisible="{Binding isVisibleHiddenGross}" />
                            <Label Grid.Column="1" Grid.Row="0" Style="{StaticResource compensationLabels}" HorizontalOptions="CenterAndExpand" Text="{Binding checkRegisterLastResponse.Gross, StringFormat='{0:C}'}" IsVisible="{Binding isVisibleGross}" />
                            <ImageButton Grid.Column="2" Grid.Row="0" HorizontalOptions="End" BackgroundColor="Transparent" Padding="0" Source="eye_slash_icon.png" IsVisible="{Binding isVisibleHiddenGross}" x:Name="HiddenIconGross">
                                <ImageButton.Behaviors>
                                    <behaviorsPack:EventToCommandBehavior Command="{Binding GrossVisibilityCommand}" CommandParameter="{Reference HiddenIconGross}" EventName="Clicked"></behaviorsPack:EventToCommandBehavior>
                                </ImageButton.Behaviors>
                            </ImageButton>
                            <ImageButton Grid.Column="2" Grid.Row="0" HorizontalOptions="End" BackgroundColor="Transparent" Padding="0" Source="eye_vision_view_icon.png" IsVisible="{Binding isVisibleGross}" x:Name="ShowIconGross">
                                <ImageButton.Behaviors>
                                    <behaviorsPack:EventToCommandBehavior Command="{Binding GrossVisibilityCommand}" CommandParameter="{Reference ShowIconGross}" EventName="Clicked"></behaviorsPack:EventToCommandBehavior>
                                </ImageButton.Behaviors>
                            </ImageButton>
                        </Grid>

                    </StackLayout>
                </Frame>

            </StackLayout>
        </ScrollView>

    </ContentPage.Content>
</ContentPage>